
project bionic/
diff --git a/bionic/libc/Android.mk b/bionic/libc/Android.mk
index fb99c81..fac334c 100644
--- a/bionic/libc/Android.mk
+++ b/bionic/libc/Android.mk
@@ -591,6 +591,7 @@ LOCAL_CFLAGS := $(libc_common_cflags) -fno-stack-protector
 LOCAL_CONLYFLAGS := $(libc_common_conlyflags)
 LOCAL_CPPFLAGS := $(libc_common_cppflags)
 LOCAL_C_INCLUDES := $(libc_common_c_includes)
+LOCAL_NO_LTO_SUPPORT := true
 LOCAL_MODULE := libc_stack_protector
 LOCAL_CLANG := $(use_clang)
 LOCAL_ADDITIONAL_DEPENDENCIES := $(libc_common_additional_dependencies)
@@ -694,6 +695,7 @@ LOCAL_CFLAGS := \
 LOCAL_CONLYFLAGS := $(libc_common_conlyflags)
 LOCAL_CPPFLAGS := $(libc_common_cppflags)
 LOCAL_C_INCLUDES := $(libc_common_c_includes)
+LOCAL_NO_LTO_SUPPORT := true
 LOCAL_MODULE := libc_freebsd
 LOCAL_CLANG := $(use_clang)
 LOCAL_ADDITIONAL_DEPENDENCIES := $(libc_common_additional_dependencies)
@@ -725,6 +727,7 @@ LOCAL_CFLAGS := \
 LOCAL_CONLYFLAGS := $(libc_common_conlyflags)
 LOCAL_CPPFLAGS := $(libc_common_cppflags)
 LOCAL_C_INCLUDES := $(libc_common_c_includes)
+LOCAL_NO_LTO_SUPPORT := true
 LOCAL_MODULE := libc_netbsd
 LOCAL_CLANG := $(use_clang)
 LOCAL_ADDITIONAL_DEPENDENCIES := $(libc_common_additional_dependencies)
@@ -829,6 +832,7 @@ endif
 LOCAL_CONLYFLAGS := $(libc_common_conlyflags)
 LOCAL_CPPFLAGS := $(libc_common_cppflags)
 LOCAL_C_INCLUDES := $(libc_common_c_includes)
+LOCAL_NO_LTO_SUPPORT := true
 LOCAL_MODULE := libc_bionic
 LOCAL_CLANG := $(use_clang)
 LOCAL_ADDITIONAL_DEPENDENCIES := $(libc_common_additional_dependencies)
@@ -908,6 +912,7 @@ LOCAL_CFLAGS := $(libc_common_cflags)
 LOCAL_CONLYFLAGS := $(libc_common_conlyflags)
 LOCAL_CPPFLAGS := $(libc_common_cppflags)
 LOCAL_C_INCLUDES := $(libc_common_c_includes)
+LOCAL_NO_LTO_SUPPORT := true
 LOCAL_MODULE := libc_common
 LOCAL_CLANG := $(use_clang)
 LOCAL_ADDITIONAL_DEPENDENCIES := $(libc_common_additional_dependencies)
@@ -965,6 +970,7 @@ LOCAL_CFLAGS := $(libc_common_cflags) \
 LOCAL_CONLYFLAGS := $(libc_common_conlyflags)
 LOCAL_CPPFLAGS := $(libc_common_cppflags)
 
+LOCAL_NO_LTO_SUPPORT := true
 LOCAL_MODULE := libc_nomalloc
 LOCAL_CLANG := $(use_clang)
 LOCAL_ADDITIONAL_DEPENDENCIES := $(libc_common_additional_dependencies)
@@ -1011,6 +1017,7 @@ LOCAL_CFLAGS := $(libc_common_cflags) \
 LOCAL_CONLYFLAGS := $(libc_common_conlyflags)
 LOCAL_CPPFLAGS := $(libc_common_cppflags)
 LOCAL_C_INCLUDES := $(libc_common_c_includes)
+LOCAL_NO_LTO_SUPPORT := true
 LOCAL_MODULE := libc
 LOCAL_CLANG := $(use_clang)
 LOCAL_ADDITIONAL_DEPENDENCIES := $(libc_common_additional_dependencies)
@@ -1038,6 +1045,7 @@ LOCAL_SRC_FILES := \
     bionic/libc_init_dynamic.cpp \
     bionic/NetdClient.cpp \
 
+LOCAL_NO_LTO_SUPPORT := true
 LOCAL_MODULE := libc
 LOCAL_CLANG := $(use_clang)
 LOCAL_ADDITIONAL_DEPENDENCIES := $(libc_common_additional_dependencies)
@@ -1111,6 +1119,7 @@ LOCAL_SRC_FILES := \
     bionic/malloc_debug_leak.cpp \
     bionic/malloc_debug_check.cpp \
 
+LOCAL_NO_LTO_SUPPORT := true
 LOCAL_MODULE := libc_malloc_debug_leak
 LOCAL_CLANG := $(use_clang)
 LOCAL_ADDITIONAL_DEPENDENCIES := $(libc_common_additional_dependencies)
@@ -1147,6 +1156,7 @@ LOCAL_SRC_FILES := \
     bionic/libc_logging.cpp \
     bionic/malloc_debug_qemu.cpp \
 
+LOCAL_NO_LTO_SUPPORT := true
 LOCAL_MODULE := libc_malloc_debug_qemu
 LOCAL_CLANG := $(use_clang)
 LOCAL_ADDITIONAL_DEPENDENCIES := $(libc_common_additional_dependencies)
diff --git a/bionic/libdl/Android.mk b/bionic/libdl/Android.mk
index cb1cb7d..42d583b 100644
--- a/bionic/libdl/Android.mk
+++ b/bionic/libdl/Android.mk
@@ -27,6 +27,8 @@ LOCAL_CFLAGS := -Wall -Wextra -Wunused -Werror
 LOCAL_MODULE := libdl
 LOCAL_ADDITIONAL_DEPENDENCIES := $(LOCAL_PATH)/Android.mk
 
+LOCAL_NO_LTO_SUPPORT := true
+
 # NOTE: libdl needs __aeabi_unwind_cpp_pr0 from libgcc.a but libgcc.a needs a
 # few symbols from libc. Using --no-undefined here results in having to link
 # against libc creating a circular dependency which is removed and we end up
@@ -35,4 +37,6 @@ LOCAL_ADDITIONAL_DEPENDENCIES := $(LOCAL_PATH)/Android.mk
 LOCAL_ALLOW_UNDEFINED_SYMBOLS := true
 LOCAL_SYSTEM_SHARED_LIBRARIES :=
 
+LOCAL_CFLAGS += -fno-lto
+
 include $(BUILD_SHARED_LIBRARY)
